.Dd 2005-12-07
.Dt AVL_INSERT 3
.Os libavl
.Sh NAME
.Nm avl_insert ,
.Nm avl_insert_left ,
.Nm avl_insert_right ,
.Nm avl_insert_rightish
.Nd functions to insert an augmented AVL tree
.Sh LIBRARY
.Lb libavl
.Sh SYNOPSIS
.In avl.h
.Ft avl_node_t *
.Fn avl_insert "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_left "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_right "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_leftish "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_somewhere "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_before "const avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_insert_after "const avl_tree_t *tree" "const void *item"
.Sh DESCRIPTION
.Fn avl_insert
inserts a node in the tree.
Fails if a node with an equal item is already in the tree.
.Pp
.Fn avl_insert_left
Insert a node into the tree.
If nodes with equal items are already in the tree, this node will
be inserted to the left of all those.
.Pp
.Fn avl_insert_right
inserts a node in the tree. 
If nodes with equal items are already in the tree, this node will
be inserted to the right of all those.
.Pp
.Fn avl_insert_rightish
inserts a node in the tree. 
If nodes with equal items are already in the tree, this node will
be inserted somewhere among those.
.Pp
.Fn avl_insert_before
Insert a node before another node.
If
.Fa old
is
.Dv NULL ,
the item is appended to the tree.
.Pp
.Fn avl_insert_after
Insert a node after another node.
If
.Fa old
is
.Dv NULL ,
the item is prepended to the tree.
.Sh RETURN VALUES
These functions return the newly inserted node.
Only
.Fn avl_insert
will return
.Dv NULL
if a node with an equal item is already in the tree.
.Sh ERRORS
These functions do not affect the value of
.Dv errno .
.Sh SEE ALSO
.Xr avl_search 3
