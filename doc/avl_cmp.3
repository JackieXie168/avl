.Dd 2008-09-15
.Dt AVL_CMP 3
.Os libavl
.Sh NAME
.Nm avl_cmp
.Nd compare various datatypes
.Sh LIBRARY
.Lb libavl
.Sh SYNOPSIS
.In avl.h
.Ft int
.Fn avl_float_cmp "float a" "float b"
.Ft int
.Fn avl_double_cmp "double a" "double b"
.Ft int
.Fn avl_char_cmp "char a" "char b"
.Ft int
.Fn avl_short_cmp "short a" "short b"
.Ft int
.Fn avl_int_cmp "int a" "int b"
.Ft int
.Fn avl_long_cmp "long a" "long b"
.Ft int
.Fn avl_int8_cmp "int8_t a" "int8_t b"
.Ft int
.Fn avl_uint8_cmp "uint8_t a" "uint8_t b"
.Ft int
.Fn avl_int16_cmp "int16_t a" "int16_t b"
.Ft int
.Fn avl_uint16_cmp "uint16_t a" "uint16_t b"
.Ft int
.Fn avl_int32_cmp "int32_t a" "int32_t b"
.Ft int
.Fn avl_uint32_cmp "uint32_t a" "uint32_t b"
.Ft int
.Fn avl_int64_cmp "int64_t a" "int64_t b"
.Ft int
.Fn avl_uint64_cmp "uint64_t a" "uint64_t b"
.Ft int
.Fn avl_int_fast8_cmp "int_fast8_t a" "int_fast8_t b"
.Ft int
.Fn avl_uint_fast8_cmp "uint_fast8_t a" "uint_fast8_t b"
.Ft int
.Fn avl_int_fast16_cmp "int_fast16_t a" "int_fast16_t b"
.Ft int
.Fn avl_uint_fast16_cmp "uint_fast16_t a" "uint_fast16_t b"
.Ft int
.Fn avl_int_fast32_cmp "int_fast32_t a" "int_fast32_t b"
.Ft int
.Fn avl_uint_fast32_cmp "uint_fast32_t a" "uint_fast32_t b"
.Ft int
.Fn avl_int_fast64_cmp "int_fast64_t a" "int_fast64_t b"
.Ft int
.Fn avl_uint_fast64_cmp "uint_fast64_t a" "uint_fast64_t b"
.Ft int
.Fn avl_int_least8_cmp "int_least8_t a" "int_least8_t b"
.Ft int
.Fn avl_uint_least8_cmp "uint_least8_t a" "uint_least8_t b"
.Ft int
.Fn avl_int_least16_cmp "int_least16_t a" "int_least16_t b"
.Ft int
.Fn avl_uint_least16_cmp "uint_least16_t a" "uint_least16_t b"
.Ft int
.Fn avl_int_least32_cmp "int_least32_t a" "int_least32_t b"
.Ft int
.Fn avl_uint_least32_cmp "uint_least32_t a" "uint_least32_t b"
.Ft int
.Fn avl_int_least64_cmp "int_least64_t a" "int_least64_t b"
.Ft int
.Fn avl_uint_least64_cmp "uint_least64_t a" "uint_least64_t b"
.Ft int
.Fn avl_time_cmp "time_t a" "time_t b"
.Ft int
.Fn avl_size_cmp "size_t a" "size_t b"
.Ft int
.Fn avl_ssize_cmp "ssize_t a" "ssize_t b"
.Ft int
.Fn avl_socklen_cmp "socklen_t a" "socklen_t b"
.Ft int
.Fn avl_unsigned_char_cmp "unsigned char a" "unsigned char b"
.Ft int
.Fn avl_unsigned_short_cmp "unsigned short a" "unsigned short b"
.Ft int
.Fn avl_unsigned_int_cmp "unsigned int a" "unsigned int b"
.Ft int
.Fn avl_unsigned_long_cmp "unsigned long a" "unsigned long b"
.Ft int
.Fn avl_pointer_cmp "void *a" "void *b"
.Ft int
.Fn avl_long_long_cmp "long long a" "long long b"
.Ft int
.Fn avl_unsigned_long_long_cmp "unsigned long long a" "unsigned long long b"
.Ft int
.Fn avl_long_double_cmp "long double a" "long double b"
.Sh DESCRIPTION
These functions are intended to be passed to
.Fn avl_tree_init
and similar functions, or to be used in more complex functions that are
in turn used as an argument to
.Fn avl_tree_init .
.Sh RETURN VALUES
These functions return -1 if
.Fa a
was found to be less than
.Fa b ,
return 0 if
.Fa a
was found to be equal to
.Fa b ,
and return 1 if
.Fa a
was found to be greater than
.Fa b .
.Sh ERRORS
This function does not affect the value of
.Dv errno .
.Sh SEE ALSO
.Xr avl 5 ,
.Xr avl_tree_init 3
