.Dd 2005-10-26
.Dt AVL_TREE_FREE 3
.Os libavl
.Sh NAME
.Nm avl_tree_free ,
.Nm avl_tree_purge
.Nd functions to empty and free an augmented AVL tree
.Sh LIBRARY
.Lb libavl
.Sh SYNOPSIS
.In avl.h
.Ft void
.Fn avl_tree_free "avl_tree_t *tree"
.Ft avl_tree_t *
.Fn avl_tree_purge "avl_tree_t *"
.Sh DESCRIPTION
.Fn avl_tree_init
initializes the structure pointed to by
.Fa tree
for use with other avl functions.
.Pp
The elements in this tree will be ordered using the
.Fn strcmp Ns
-like function supplied in
.Fa cmp
(which may be
.Dv NULL
for unsorted, ordered lists) and if
.Fa free
is not
.Dv NULL
then the delete functions in the avl library will use this to free any memory
associated with the stored item.
.Pp
.Fn avl_tree_alloc
allocates an avl_tree_t and initializes it using
.Fn avl_tree_init .
.Pp
.Fn avl_tree_clear
reinitializes the tree structure without touching the ordering/freeing
functions, orphaning any tree nodes that it contains.
.Sh RETURN VALUES
Returns the value of
.Fa tree
(even if it's
.Dv NULL ) .
.Sh ERRORS
The
.Fn avl_tree_alloc
function can fail if and only if
.Fn malloc
fails.
If
.Fn malloc
fails, it sets
.Dv errno
appropriately. In particular, it may return
.Dv NULL
and set
.Dv errno
to:
.Bl -tag -width Er
.It Er ENOMEM
Out of memory.
.El
.Sh SEE ALSO
.Xr avl_tree_free 3 ,
.Xr avl_tree_purge 3 ,
.Xr malloc 3 ,
.Xr strcmp 3
