.Dd 2005-12-07
.Dt AVL_ITEM_INSERT 3
.Os libavl
.Sh NAME
.Nm avl_item_insert ,
.Nm avl_item_insert_left ,
.Nm avl_item_insert_right ,
.Nm avl_item_insert_rightish
.Nd functions to insert an augmented AVL tree
.Sh LIBRARY
.Lb libavl
.Sh SYNOPSIS
.In avl.h
.Ft avl_node_t *
.Fn avl_item_insert "avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_left "avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_right "avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_leftish "avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_somewhere "avl_tree_t *tree" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_before "avl_tree_t *tree" "avl_node_t *old" "const void *item"
.Ft avl_node_t *
.Fn avl_item_insert_after "avl_tree_t *tree" "avl_node_t *old" "const void *item"
.Sh DESCRIPTION
.Fn avl_item_insert
inserts a node in the tree.
Fails if a node with an equal item is already in the tree.
.Pp
.Fn avl_item_insert_left
inserts a node into the tree.
If nodes with equal items are already in the tree, this node will
be inserted to the left of all those.
.Pp
.Fn avl_item_insert_right
inserts a node in the tree. 
If nodes with equal items are already in the tree, this node will
be inserted to the right of all those.
.Pp
.Fn avl_item_insert_somewhere
inserts a node in the tree. 
If nodes with equal items are already in the tree, this node will
be inserted somewhere among those.
.Pp
.Fn avl_item_insert_before
inserts a node before another node.
If
.Fa old
is
.Dv NULL ,
the item is appended to the tree.
.Pp
.Fn avl_item_insert_after
inserts a node after another node.
If
.Fa old
is
.Dv NULL ,
the item is prepended to the tree.
.Sh RETURN VALUES
These functions return the newly inserted node.
Only
.Fn avl_item_insert
will return
.Dv NULL
if a node with an equal item is already in the tree.
.Sh ERRORS
These functions do not affect the value of
.Dv errno .
.Sh SEE ALSO
.Xr avl_search 3
